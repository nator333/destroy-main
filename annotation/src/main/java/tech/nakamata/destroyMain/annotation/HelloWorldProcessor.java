package tech.nakamata.destroyMain.annotation;

import java.io.BufferedWriter;
import java.io.IOException;
import java.io.UncheckedIOException;
import java.util.Set;
import javax.annotation.processing.AbstractProcessor;
import javax.annotation.processing.RoundEnvironment;
import javax.annotation.processing.SupportedSourceVersion;
import javax.lang.model.SourceVersion;
import javax.lang.model.element.TypeElement;
import javax.tools.JavaFileObject;

@SupportedSourceVersion(SourceVersion.RELEASE_11)
public class HelloWorldProcessor extends AbstractProcessor {

  @Override
  public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {
    if (!annotations.isEmpty()) {
      try {
        JavaFileObject javaFileObject = this.processingEnv.getFiler()
            .createSourceFile("foo.AutoGeneratedClass");
        try (BufferedWriter writer = new BufferedWriter(javaFileObject.openWriter())) {
          writer.write(
              "package tech.nakamata;\n" +
                  "public class AutoGeneratedClass {}"
          );
        }
      } catch (IOException e) {
        throw new UncheckedIOException(e);
      }
    }

    return true;
  }

  @Override
  public SourceVersion getSupportedSourceVersion() {
    return SourceVersion.latest();
  }

  @Override
  public Set<String> getSupportedAnnotationTypes() {
    return Set.of("tech.nakamata.destroyMain.annotation.HelloWorld");
  }
}
